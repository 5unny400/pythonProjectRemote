pipeline {
  agent {
    node {
      label 'maven'
    }

  }
  stages {
    stage('拉取代码') {
      agent none
      steps {
        container('maven') {
          git(credentialsId: 'gitee-auth', url: 'https://gitee.com/zhengqingya/test.git', branch: 'master', changelog: true, poll: false)
          sh 'ls'
        }

      }
    }

    stage('项目编译') {
      agent none
      steps {
        container('maven') {
          sh 'mvn clean package -Dmaven.test.skip=true'
          sh 'ls'
          sh 'cp target/*.jar docker'
          sh 'ls docker'
        }

      }
    }

    stage('docker镜像构建&推送') {
      agent none
      steps {
        container('maven') {
          sh 'docker build -f docker/Dockerfile  -t $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:$BUILD_NUMBER ./docker'
          withCredentials([usernamePassword(credentialsId: 'aliyun-docker-registry-auth', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME',)]) {
            sh 'echo "$DOCKER_PASSWORD" | docker login $REGISTRY -u "$DOCKER_USERNAME" --password-stdin'
            sh 'docker push $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:$BUILD_NUMBER'
          }

        }

      }
    }

    stage('发布到k8s') {
      agent none
      steps {
        sh 'ls'
        kubernetesDeploy(enableConfigSubstitution: true, deleteResource: false, kubeconfigId: 'kubeconfig-auth', configs: 'k8s/**')
      }
    }

  }
  environment {
    REGISTRY = 'registry.cn-hangzhou.aliyuncs.com'
    DOCKERHUB_NAMESPACE = 'zhengqingya'
    APP_NAME = 'test'
  }
  parameters {
    string(name: 'TAG_NAME', defaultValue: '', description: '')
  }
}